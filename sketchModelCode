/*
 * Terrapin Project
 * PoE Fall 2016
 * Zarin Bhuiyan, Jamie Cho, Kaitlyn Keil, Lauren Pudvan, Katya Soltan
 * 
 * Sketch Model Code
 * Started 10/18
*/

// Motor set up placeholder (might be what we use longterm)
#include <Wire.h>
#include <Adafruit_MotorShield.h>
#include "utility/Adafruit_MS_PWMServoDriver.h"

// Set up motors with pins. For sketch model, all 4
//  will be doing the same thing.
Adafruit_MotorShield AFMS = Adafruit_MotorShield(); 
Adafruit_DCMotor *frontMotor0 = AFMS.getMotor(1);
Adafruit_DCMotor *frontMotor1 = AFMS.getMotor(2);
Adafruit_DCMotor *backMotor0 = AFMS.getMotor(3);
Adafruit_DCMotor *backMotor1 = AFMS.getMotor(4);

// Constant values and pins.

// Set up the pins for the different sensors
//  LS stands for Light Sensor. Numbers increase
//  clockwise from the front: LS0 is front, LS1 is
//  at 3 o'clock (from top view), LS2 is in back, etc. Eye1 and Eye2 power LEDs.
const int LS0 = A0, LS2 = A2, LS1 = A1, LS3 = A3, Eye1 = 8, Eye2 = 9;

// Calibration code. Values are currently not known;
//  scale either this or have a scaling multiplier.
//  seeLight implies that if the sensor value is greater 
//  than this value, it is in light.
const int seeLight = 100; // placeholder value; change when callibrated
const int mustMove = 150; // drive value for wheels

// Create the variables to store sensor values. Each
//  corresponds with the matching name.
int LS0val = 0, LS1val = 0, LS2val = 0, LS3val = 0;

void setup() {
  Serial.begin(9600); // start Serial to see values
  
  AFMS.begin();
  // Run all motors forward to begin with (make sure
  //  they are facing the proper direction)
  runForward();

  // Turn on both of the LEDs for the eyes.
  pinMode(Eye1, OUTPUT);
  digitalWrite(Eye1, HIGH);
  pinMode(Eye2, OUTPUT);
  digitalWrite(Eye2, HIGH);
  digitalWrite(Eye1, LOW);
  digitalWrite(Eye2, LOW);
}

void loop() {
  // put your main code here, to run repeatedly:
  LS0val = analogRead(LS0);
  LS2val = analogRead(LS2);
  Serial.print(LS0val);
  Serial.print(',');
  Serial.println(LS2val);

  if(LS0val > seeLight && LS2val < seeLight) {
    runForward();
    timeToMove();
  }
  else if(LS0val < seeLight && LS2val > seeLight) {
    runBackward();
    timeToMove();
  }
  else {
    timeToStop();
  }
}

void runForward() {
  // Make all the motors run forward
  digitalWrite(Eye1, HIGH);
  digitalWrite(Eye2, LOW);
  frontMotor0->run(FORWARD);
  backMotor0->run(FORWARD);
  frontMotor1->run(FORWARD);
  backMotor1->run(FORWARD);
}

void runBackward() {
  digitalWrite(Eye1, LOW);
  digitalWrite(Eye2, HIGH);
  frontMotor0->run(BACKWARD);
  backMotor0->run(BACKWARD);
  frontMotor1->run(BACKWARD);
  backMotor1->run(BACKWARD);
}

void timeToMove() {
  frontMotor0->setSpeed(mustMove);
  backMotor0->setSpeed(mustMove);
  frontMotor1->setSpeed(mustMove);
  backMotor1->setSpeed(mustMove);
}

void timeToStop() {
  digitalWrite(Eye1, HIGH);
  digitalWrite(Eye2, HIGH);
  frontMotor0->run(RELEASE);
  backMotor0->run(RELEASE);
  frontMotor1->run(RELEASE);
  backMotor1->run(RELEASE);
}
